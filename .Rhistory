select(work_arrangement, `Education/ training opportunities`:`Everything (unspecified)`) %>%
# rename(col1 = `More access to opportunities/ resources`,
#        col2 = `*Education/ training opportunities`) %>%
group_by(work_arrangement) %>%
freqs(nas_group = FALSE) %>%
filter(!is.na(value)) %>%
select(
label = variable,
result = n,
group_var
) %>%
pivot_wider(
values_from = n,
names_from = group_var
)
#freqs by work arrangement
frequencies <- responses %>%
select(work_arrangement, `Education/ training opportunities`:`Everything (unspecified)`) %>%
# rename(col1 = `More access to opportunities/ resources`,
#        col2 = `*Education/ training opportunities`) %>%
group_by(work_arrangement) %>%
freqs(nas_group = FALSE) %>%
filter(!is.na(value)) %>%
select(
label = variable,
n = result,
group_var
) %>%
pivot_wider(
values_from = n,
names_from = group_var
)
View(frequencies)
#freqs by work arrangement
frequencies <- responses %>%
select(work_arrangement, `Education/ training opportunities`:`Everything (unspecified)`) %>%
# rename(col1 = `More access to opportunities/ resources`,
#        col2 = `*Education/ training opportunities`) %>%
group_by(work_arrangement) %>%
freqs(nas_group = FALSE) %>%
filter(!is.na(value)) %>%
select(
label = variable,
n = result,
group_var
) %>%
pivot_wider(
values_from = n,
names_from = group_var
) %>%
mutate(
Hybrid = ifelse(is.na(Hybrid), 0, Hybrid),
Offsite = ifelse(is.na(Offsite), 0, Offsite)
)
#freqs by work arrangement
frequencies <- responses %>%
select(work_arrangement, `Education/ training opportunities`:`Everything (unspecified)`) %>%
# rename(col1 = `More access to opportunities/ resources`,
#        col2 = `*Education/ training opportunities`) %>%
group_by(work_arrangement) %>%
freqs(nas_group = FALSE) %>%
filter(!is.na(value)) %>%
select(
label = variable,
n = result,
group_var
) %>%
pivot_wider(
values_from = n,
names_from = group_var
) %>%
mutate(
Hybrid = ifelse(is.na(Hybrid), 0, Hybrid),
Offsite = ifelse(is.na(Offsite), 0, Offsite)
) %>%
pivot_longer(
names_to = group_var,
values_to = result
)
#freqs by work arrangement
frequencies <- responses %>%
select(work_arrangement, `Education/ training opportunities`:`Everything (unspecified)`) %>%
# rename(col1 = `More access to opportunities/ resources`,
#        col2 = `*Education/ training opportunities`) %>%
group_by(work_arrangement) %>%
freqs(nas_group = FALSE) %>%
filter(!is.na(value)) %>%
select(
label = variable,
n = result,
group_var
) %>%
pivot_wider(
values_from = n,
names_from = group_var
) %>%
mutate(
Hybrid = ifelse(is.na(Hybrid), 0, Hybrid),
Offsite = ifelse(is.na(Offsite), 0, Offsite)
) %>%
pivot_longer(
names_to = 'group_var',
values_to = 'result'
)
?pivot_longer
#freqs by work arrangement
frequencies <- responses %>%
select(work_arrangement, `Education/ training opportunities`:`Everything (unspecified)`) %>%
# rename(col1 = `More access to opportunities/ resources`,
#        col2 = `*Education/ training opportunities`) %>%
group_by(work_arrangement) %>%
freqs(nas_group = FALSE) %>%
filter(!is.na(value)) %>%
select(
label = variable,
n = result,
group_var
) %>%
pivot_wider(
values_from = n,
names_from = group_var
) %>%
mutate(
Hybrid = ifelse(is.na(Hybrid), 0, Hybrid),
Offsite = ifelse(is.na(Offsite), 0, Offsite)
) %>%
pivot_longer(
cols = Hybrid:Onsite,
names_to = 'group_var',
values_to = 'result'
)
#freqs by work arrangement
frequencies <- responses %>%
select(work_arrangement, `Education/ training opportunities`:`Everything (unspecified)`) %>%
# rename(col1 = `More access to opportunities/ resources`,
#        col2 = `*Education/ training opportunities`) %>%
group_by(work_arrangement) %>%
freqs(nas_group = FALSE) %>%
filter(!is.na(value)) %>%
select(
label = variable,
n = result,
group_var
) %>%
pivot_wider(
values_from = n,
names_from = group_var
) %>%
mutate(
Hybrid = ifelse(is.na(Hybrid), 0, Hybrid),
Offsite = ifelse(is.na(Offsite), 0, Offsite)
) %>%
pivot_longer(
cols = Hybrid:Onsite,
names_to = 'group_var',
values_to = 'result'
) %>%
order_label(horizontal = T,
group_var = group_var)
library(orderlabel)
#freqs by work arrangement
frequencies <- responses %>%
select(work_arrangement, `Education/ training opportunities`:`Everything (unspecified)`) %>%
# rename(col1 = `More access to opportunities/ resources`,
#        col2 = `*Education/ training opportunities`) %>%
group_by(work_arrangement) %>%
freqs(nas_group = FALSE) %>%
filter(!is.na(value)) %>%
select(
label = variable,
n = result,
group_var
) %>%
pivot_wider(
values_from = n,
names_from = group_var
) %>%
mutate(
Hybrid = ifelse(is.na(Hybrid), 0, Hybrid),
Offsite = ifelse(is.na(Offsite), 0, Offsite)
) %>%
pivot_longer(
cols = Hybrid:Onsite,
names_to = 'group_var',
values_to = 'result'
) %>%
order_label(horizontal = T,
group_var = group_var)
frequencies
text_settings_grouped <- list(
"Hybrid" = fp_text(font.size = 10.5, color = "gray"),
"Offsite" = fp_text(font.size = 10.5),
"Onsite" = fp_text(font.size = 10.5)
)
color_settings_grouped <- list(
"Hybrid" = 'gray',
"Offsite" = "red",
"Onsite" = "blue"
)
chart <- ms_grouped_y2(
direction = "horizontal",
num_fmt = "general",
axis_text_size = 8
)
print(chart, preview = TRUE)
responses %>% freqs(work_arrangement)
# break out q1 by work type -----------------------------------------------
responses <- oe_data1 %>%
mutate(`Equal career opportunities` =
as.numeric(`Equal career opportunities`),
`Streamline process/ guidelines` =
as.numeric(`Streamline process/ guidelines`)) %>%
rename(work_arrangement =
`How would you describe your current work arrangement for St. Jude?`)
class(responses$`Education/ training opportunities`)
#freqs by work arrangement
frequencies <- responses %>%
select(work_arrangement, `Education/ training opportunities`:`Everything (unspecified)`) %>%
# rename(col1 = `More access to opportunities/ resources`,
#        col2 = `*Education/ training opportunities`) %>%
group_by(work_arrangement) %>%
freqs(nas_group = FALSE) %>%
filter(!is.na(value)) %>%
select(
result = n,
label = variable,
group_var
) %>%
pivot_wider(
names_from = group_var,
values_from = result
) %>%
mutate(
Hybrid = ifelse(is.na(Hybrid), 0 , Hybrid),
Offsite = ifelse(is.na(Offsite), 0 , Offsite),
Onsite = ifelse(is.na(Onsite), 0 , Onsite)
) %>%
pivot_longer(
cols = Hybrid:Onsite,
names_to = 'group_var',
values_to = 'result'
) %>%
order_label(horizontal = T,
group_var = group_var)
frequencies
text_settings_grouped <- list(
"Hybrid" = fp_text(font.size = 10.5, color = "gray"),
"Offsite" = fp_text(font.size = 10.5),
"Onsite" = fp_text(font.size = 10.5)
)
color_settings_grouped <- list(
"Hybrid" = 'gray',
"Offsite" = "red",
"Onsite" = "blue"
)
chart <- ms_grouped_y2(
direction = "horizontal",
num_fmt = "general",
axis_text_size = 8
)
print(chart, preview = TRUE)
?ms_single
library(y2artisan)
?ms_single_y2
?str_squish
frequencies <- tibble::tibble(
label = c('Selected','Selected','Selected','Selected','Selected'),
result = c(.25, .15, .20, .10, .30),
prompt = c(
'What is your favorite color? - Blue',
'What is your favorite color? - Green',
'What is your favorite color? - Yellow',
'What is your favorite color? - Purple',
'What is your favorite color? - Orange'
),
prompt2 = c(
'What is your favorite color? \nBlue',
'What is your favorite color? \nGreen',
'What is your favorite color? \nYellow',
'What is your favorite color? \nPurple',
'What is your favorite color? \nOrange'
)
)
new_df <- frequencies %>% dplyr::mutate(prompt = prompt2)
# Adding these for testing
devtools::load_all()
frequencies <- tibble::tibble(
label = c('Selected','Selected','Selected','Selected','Selected'),
result = c(.25, .15, .20, .10, .30),
prompt = c(
'What is your favorite color? - Blue',
'What is your favorite color? - Green',
'What is your favorite color? - Yellow',
'What is your favorite color? - Purple',
'What is your favorite color? - Orange'
),
prompt2 = c(
'What is your favorite color? \nBlue',
'What is your favorite color? \nGreen',
'What is your favorite color? \nYellow',
'What is your favorite color? \nPurple',
'What is your favorite color? \nOrange'
)
)
new_df <- frequencies %>% dplyr::mutate(prompt = prompt2)
test <- preamble_rm(new_df, before_symbol = '\n')
View(new_df)
View(frequencies)
View(new_df)
frequencies <- tibble::tibble(
label = c('Selected','Selected','Selected','Selected','Selected'),
result = c(.25, .15, .20, .10, .30),
prompt = c(
'What is your favorite color? \nBlue',
'What is your favorite color? \nGreen',
'What is your favorite color? \nYellow',
'What is your favorite color? \nPurple',
'What is your favorite color? \nOrange'
)
)
test <- preamble_rm(frequencies, before_symbol = '  ')
prompt_vector <- test$prompt
correct_answer <- c("Blue", "Green", "Yellow", "Purple", "Orange")
expect_equal(prompt_vector, correct_answer)
View(test)
test <- preamble_rm(frequencies, before_symbol = ?)
prompt_vector <- test$prompt
correct_answer <- c("Blue", "Green", "Yellow", "Purple", "Orange")
test <- preamble_rm(frequencies, before_symbol = '?')
prompt_vector <- test$prompt
correct_answer <- c("Blue", "Green", "Yellow", "Purple", "Orange")
expect_equal(prompt_vector, correct_answer)
frequencies <- tibble::tibble(
label = c('Selected','Selected','Selected','Selected','Selected'),
result = c(.25, .15, .20, .10, .30),
prompt2 = c(
'What is your favorite color? - Blue',
'What is your favorite color? - Green',
'What is your favorite color? - Yellow',
'What is your favorite color? - Purple',
'What is your favorite color? - Orange'
)
)
test <- preamble_rm(frequencies, var = prompt2)
prompt_vector <- test$prompt2
correct_answer <- c("Blue", "Green", "Yellow", "Purple", "Orange")
expect_equal(prompt_vector, correct_answer)
frequencies <- tibble::tibble(
label = c('Selected','Selected','Selected','Selected','Selected'),
result = c(.25, .15, .20, .10, .30),
prompt = c(
'What is your favorite color? ... Blue',
'What is your favorite color? ... Green',
'What is your favorite color? ... Yellow',
'What is your favorite color? ... Purple',
'What is your favorite color? ... Orange'
)
)
test <- preamble_rm(frequencies, before_symbol = '...')
prompt_vector <- test$prompt
correct_answer <- c("Blue", "Green", "Yellow", "Purple", "Orange")
expect_equal(prompt_vector, correct_answer)
test <- preamble_rm(frequencies, before_symbol = '\\.')
prompt_vector <- test$prompt
correct_answer <- c("Blue", "Green", "Yellow", "Purple", "Orange")
test <- preamble_rm(frequencies, before_symbol = '\\. ')
prompt_vector <- test$prompt
correct_answer <- c("Blue", "Green", "Yellow", "Purple", "Orange")
frequencies <- tibble::tibble(
label = c('Selected','Selected','Selected','Selected','Selected'),
result = c(.25, .15, .20, .10, .30),
prompt1 = 'What is your favorite color? /nBlue',
prompt2 = 'What is your favorite color? /n/n/n Blue',
prompt2 = 'What is your favorite color? /n - Blue',
prompt2 = 'What is your favorite color?  Blue'
)
test <- preamble_rm(frequencies, var = prompt2)
frequencies <- tibble::tibble(
label = c('Selected','Selected','Selected','Selected','Selected'),
result = c(.25, .15, .20, .10, .30),
prompt1 = 'What is your favorite color? /nBlue',
prompt2 = 'What is your favorite color? /n/n/n Blue',
prompt2 = 'What is your favorite color? /n - Blue',
prompt2 = 'What is your favorite color?  Blue'
)
frequencies <- tibble::tibble(
label = c('Selected'),
result = c(.25),
prompt1 = 'What is your favorite color? /nBlue',
prompt2 = 'What is your favorite color? /n/n/n Blue',
prompt2 = 'What is your favorite color? /n - Blue',
prompt2 = 'What is your favorite color?  Blue'
)
tibble::tibble(
label = c('Selected'),
result = c(.25)
)
frequencies <- tibble::tibble(
label = c('Selected'),
result = c(.25),
prompt1 = c('What is your favorite color? /nBlue'),
prompt2 = c('What is your favorite color? /n/n/n Blue'),
prompt2 = c('What is your favorite color? /n - Blue'),
prompt2 = c('What is your favorite color?  Blue')
)
frequencies <- tibble::tibble(
label = c('Selected'),
result = c(.25),
prompt1 = c('What is your favorite color? /nBlue'),
prompt2 = c('What is your favorite color? /n/n/n Blue'),
prompt2 = c('What is your favorite color? /n - Blue'),
prompt4 = c('What is your favorite color?  Blue')
)
frequencies <- tibble::tibble(
label = c('Selected'),
result = c(.25),
prompt1 = c('What is your favorite color? /nBlue'),
prompt2 = c('What is your favorite color? /n/n/n Blue'),
prompt3 = c('What is your favorite color? /n - Blue'),
prompt4 = c('What is your favorite color?  Blue')
)
test <- preamble_rm(frequencies, var = prompt2)
test <- preamble_rm(frequencies, var = prompt2) %>% dplyr::pull(prompt2)
test1 <- preamble_rm(frequencies, var = prompt1) %>% dplyr::pull(prompt1)
test2 <- preamble_rm(frequencies, var = prompt2) %>% dplyr::pull(prompt2)
test3 <- preamble_rm(frequencies, var = prompt3) %>% dplyr::pull(prompt3)
test4 <- preamble_rm(frequencies, var = prompt4) %>% dplyr::pull(prompt4)
frequencies <- tibble::tibble(
label = c('Selected'),
result = c(.25),
prompt1 = c('What is your favorite color? /n - Blue'),
prompt2 = c('What is your favorite color? /n-Blue'),
prompt3 = c('What is your favorite color? /n/n/n - Blue'),
prompt4 = c('What is your favorite color?  -  Blue')
)
test1 <- preamble_rm(frequencies, var = prompt1) %>% dplyr::pull(prompt1)
test2 <- preamble_rm(frequencies, var = prompt2) %>% dplyr::pull(prompt2)
test3 <- preamble_rm(frequencies, var = prompt3) %>% dplyr::pull(prompt3)
test4 <- preamble_rm(frequencies, var = prompt4) %>% dplyr::pull(prompt4)
frequencies <- tibble::tibble(
label = c('Selected'),
result = c(.25),
prompt1 = c('What is your favorite color? /n - Blue'),
prompt2 = c('What is your favorite color? /n-Blue'),
prompt3 = c('What is your favorite color? /n/n/n - Blue'),
prompt4 = c('What is your favorite color? /t - Blue'),
prompt5 = c('What is your favorite color?  -  Blue')
)
test1 <- preamble_rm(frequencies, var = prompt1) %>% dplyr::pull(prompt1)
test2 <- preamble_rm(frequencies, var = prompt2) %>% dplyr::pull(prompt2)
test3 <- preamble_rm(frequencies, var = prompt3) %>% dplyr::pull(prompt3)
test4 <- preamble_rm(frequencies, var = prompt4) %>% dplyr::pull(prompt4)
test5 <- preamble_rm(frequencies, var = prompt5) %>% dplyr::pull(prompt5)
prompt2 = c('What is your favorite color? /n-Blue')
library(tidyverse)
str_squish(prompt2)
str_remove(prompt2, '/n')
preamble_rm <- function(
dataset,
var = prompt,
before_symbol = '- '
) {
prompt <- NULL
combined_remove_symbol <- stringr::str_c('.*', before_symbol)
dataset <- dataset %>%
dplyr::mutate(
'{{var}}' := as.character({{ var }}),
'{{var}}' := stringr::str_squish({{ var }}),
'{{var}}' := stringr::str_remove_all({{ var }}, '/n'),
'{{var}}' := stringr::str_remove({{ var }}, combined_remove_symbol)
)
return(dataset)
}
frequencies <- tibble::tibble(
label = c('Selected'),
result = c(.25),
prompt1 = c('What is your favorite color? /n - Blue'),
prompt2 = c('What is your favorite color? /n-Blue'),
prompt3 = c('What is your favorite color? /n/n/n - Blue'),
prompt4 = c('What is your favorite color? /t - Blue'),
prompt5 = c('What is your favorite color?  -  Blue')
)
test1 <- preamble_rm(frequencies, var = prompt1) %>% dplyr::pull(prompt1)
test2 <- preamble_rm(frequencies, var = prompt2) %>% dplyr::pull(prompt2)
test3 <- preamble_rm(frequencies, var = prompt3) %>% dplyr::pull(prompt3)
test4 <- preamble_rm(frequencies, var = prompt4) %>% dplyr::pull(prompt4)
test5 <- preamble_rm(frequencies, var = prompt5) %>% dplyr::pull(prompt5)
prompt2 = c('What is your favorite color? /n- Blue')
str_squish(prompt2)
frequencies <- tibble::tibble(
label = c('Selected'),
result = c(.25),
prompt1 = c('What is your favorite color? /n - Blue'),
prompt2 = c('What is your favorite color? /n- Blue'),
prompt3 = c('What is your favorite color? /n/n/n - Blue'),
prompt4 = c('What is your favorite color? /t - Blue'),
prompt5 = c('What is your favorite color?  -  Blue')
)
test1 <- preamble_rm(frequencies, var = prompt1) %>% dplyr::pull(prompt1)
test2 <- preamble_rm(frequencies, var = prompt2) %>% dplyr::pull(prompt2)
test3 <- preamble_rm(frequencies, var = prompt3) %>% dplyr::pull(prompt3)
test4 <- preamble_rm(frequencies, var = prompt4) %>% dplyr::pull(prompt4)
test5 <- preamble_rm(frequencies, var = prompt5) %>% dplyr::pull(prompt5)
#Set up the working directory to make package
library(devtools)
library(roxygen2)
install_github('y2analytics/y2artisan')
install.packages(c("dbplyr", "digest", "fastDummies", "lme4", "Matrix", "MatrixModels", "pkgload", "Rcpp", "readxl", "renv", "rstudioapi", "shiny", "testthat", "usethis", "xml2"))
install.packages(c("dbplyr", "digest", "fastDummies", "lme4", "Matrix", "MatrixModels", "pkgload", "Rcpp", "readxl", "renv", "rstudioapi", "shiny", "testthat", "usethis", "xml2"))
install.packages(c("dbplyr", "digest", "fastDummies", "lme4", "Matrix", "MatrixModels", "pkgload", "Rcpp", "readxl", "renv", "rstudioapi", "shiny", "testthat", "usethis", "xml2"))
install.packages(c("dbplyr", "digest", "fastDummies", "lme4", "Matrix", "MatrixModels", "pkgload", "Rcpp", "readxl", "renv", "rstudioapi", "shiny", "testthat", "usethis", "xml2"))
library(y2artisan)
